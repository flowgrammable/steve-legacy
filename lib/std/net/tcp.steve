
def uint(n : nat) -> typename = __bits(nat, n, 1);
def seq(t : typename) -> typename = __net_seq(t, true);

def Tcp : typename = record {
  src_port    : uint(16); // source port
  dest_port   : uint(16); // destination port
  seq_number  : uint(32); // sequence number of the first byte of data
  ack_number  : uint(32); // value of next seq number sender expects to receive
  data_offset : uint(4);  // how many 32-bit words are in the header
  reserved    : uint(6);  // reserved for future use
  code 			  : uint(6);  // contains various flag information
  window			: uint(16); // size of data that can be received
  checksum		: uint(16); // checksum to detect corruption of packets
  urgent_ptr  : uint(16); // pointer to the first byte of urgent data 
  options			: seq(uint(32)) where constrain(data_offset - 5);
  data        : seq(uint(8)); // where constrain(window)?
};
