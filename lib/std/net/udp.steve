
def uint(n : nat) -> typename = __bits(nat, n, 1);
def seq(t : typename) -> typename = __net_seq(t, true);

def Udp : typename = record {
  src_port  : uint(16); // source port
  dest_port : uint(16); // destination port
  length    : uint(16); // length in bytes of the whole udp packet (header+data)
  checksum  : uint(16); // checksum to detect corruption of packets
  data      : seq(uint(8)) where constrain(length - 8);
};
